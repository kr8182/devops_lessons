pipeline {
    agent any

    tools {
        jdk 'JDK17'
        maven 'maven_3.9.5'
    }

    environment {
      GITHUB_REPO_CRED = credentials("48b7c3fd-2318-489c-a476-731fa2969db4")
      GITHUB_REPO_OWNER = "kr8182"
	  GITHUB_REPO_NAME = "devops_lessons"
      GITHUB_REPO_URL = "https://github.com/${GITHUB_REPO_OWNER}/${GITHUB_REPO_NAME}.git"
    }
    stages {
            stage('Checkout') {
                steps {
                    git branch: 'main', changelog: false, credentialsId: '48b7c3fd-2318-489c-a476-731fa2969db4', poll: false, url: env.GITHUB_REPO_URL
                }
            }

            stage('Build') {
                steps {
                    // Get some code from a GitHub repository
                    git branch: 'diplom', credentialsId: '48b7c3fd-2318-489c-a476-731fa2969db4', url: 'https://github.com/levelup-devops/kr8182.git'
                    dir('diplom/apps/webbooks'){
                        sh "mvn -Dmaven.test.failure.ignore=true clean -DDB.url=jdbc:postgresql://192.168.56.102:5432/webbooks package"
                        emailext body: 'Build started', subject: 'Build_Started', to: 'c4karuya@gmail.com'
                        }
                    // Run Maven on a Unix agent.
                    // To run Maven on a Windows agent, use
                    // bat "mvn -Dmaven.test.failure.ignore=true clean package"
                }
            }
            stage('Artifacts') {
                        when { expression { env.BRANCH_NAME == "main" } }

                        steps {
                            dir('diplom/apps/webbooks') {
                                // Run Maven on a Unix agent.
                                junit '**/target/surefire-reports/TEST-*.xml'
                                archiveArtifacts allowEmptyArchive: true, artifacts: 'target/*.jar', caseSensitive: false, defaultExcludes: false, fingerprint: true, followSymlinks: false}
                            }
         }
            stage('Upload') {
            when { expression { env.BRANCH_NAME == "main" } }
                steps {
                    dir('diplom/apps/webbooks') {
                        sh "mvn -DskipTests -s settings.xml -Dmaven.repo.local=${WORKSPACE}/.m2/repository deploy"
                    }
                }
            }
            stage('Docker_Build'){
            when { expression { env.BRANCH_NAME == "main" } }
                steps {
                       dir('diplom/apps/webbooks') {
                        sh "docker build -t kr8182/webbooks_diplom:latest ."
                       }
                }
            }
            stage('Docker_HUB_Push'){
            when { expression { env.BRANCH_NAME == "main" } }
                steps {
                       dir('diplom/apps/webbooks') {
                       withDockerRegistry(credentialsId: 'd19b6aab-c423-465a-806e-e085c3086665', url:'') {
                           sh "docker push kr8182/webbooks_diplom:latest"
                       }
                   }
                }
            }
         }
   }